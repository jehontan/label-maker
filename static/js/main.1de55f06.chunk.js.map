{"version":3,"sources":["Form.js","Label.js","LabelMaker.js","BulkMaker.js","SettingsDialog.js","App.js","serviceWorker.js","index.js"],"names":["Form","props","handleNameChange","bind","handleNricChange","handleBedNoChange","handleCatStatusChange","handleDateChange","handleAllergiesChange","event","this","onChange","name","target","value","nric","bed_no","cat_status","date","admission_date","allergies","Grid","container","spacing","item","xs","md","TextField","id","label","variant","fullWidth","select","defaultValue","align","MenuItem","key","utils","DateFnsUtils","disableToolbar","format","KeyboardButtonProps","React","Component","dateFns","DateFnsAdapter","Label","generate","ctx","canvasRef","current","getContext","p","printLeftMargin","printer","dpmm","marginLeft","printHeight","labelHeight","marginTop","save","scale","translate","qr","qrcode","addData","make","renderTo2dContext","restore","font","text","dim","measureText","printPadding","rotate","Math","PI","width","fillText","textSize","style","overflow","float","position","labelWidth","height","display","justifyContent","alignItems","border","ref","LabelMaker","handleFormChange","handleGenerate","handlePrint","createRef","state","Date","now","change","setState","canvas","clearRect","render","img","toDataURL","console","log","a","window","open","document","write","onload","print","close","onPrint","classes","Fragment","Paper","className","paper","Typography","Button","color","onClick","withStyles","theme","root","flexGrow","title","padding","margin","textAlign","palette","secondary","withTheme","parse","require","createLabel","record","BulkMaker","handleUpload","previewRef","data","records","labels","preview","innerHTML","parser","columns","on","read","createElement","push","appendChild","reader","FileReader","result","readAsText","files","component","type","SettingsDialog","useTheme","fullScreen","useMediaQuery","breakpoints","down","printerItems","Object","entries","printers","map","useState","changed","setChanged","setPrinter","disabled","setDisabled","handleClose","onClose","Dialog","onBackdropClick","DialogTitle","DialogContent","DialogContentText","Divider","helperText","InputProps","endAdornment","InputAdornment","DialogActions","startIcon","onSave","config","App","handlePrintDone","handleSettingsToggle","handleSettingsChanged","handleDrawerOpen","handleDrawerClose","savedPrinter","localStorage","getItem","JSON","settingsOpen","drawerOpen","setItem","stringify","CssBaseline","AppBar","Toolbar","IconButton","aria-label","edge","clsx","menuButton","hide","Drawer","drawer","anchor","drawerPaper","drawerHeader","List","ListItem","button","Link","to","ListItemIcon","ListItemText","primary","Container","maxWidth","path","flexShrink","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.1de55f06.chunk.js","sourcesContent":["import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\n\r\nclass Form extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleNameChange = this.handleNameChange.bind(this);\r\n    this.handleNricChange = this.handleNricChange.bind(this);\r\n    this.handleBedNoChange = this.handleBedNoChange.bind(this);\r\n    this.handleCatStatusChange = this.handleCatStatusChange.bind(this);\r\n    this.handleDateChange = this.handleDateChange.bind(this);\r\n    this.handleAllergiesChange = this.handleAllergiesChange.bind(this);\r\n  }\r\n\r\n  // Change Handlers\r\n\r\n  handleNameChange(event) {\r\n    this.props.onChange({name: event.target.value});\r\n  }\r\n\r\n  handleNricChange(event) {\r\n    this.props.onChange({nric: event.target.value});\r\n  }\r\n\r\n  handleBedNoChange(event) {\r\n    this.props.onChange({bed_no: event.target.value});\r\n  }\r\n\r\n  handleCatStatusChange(event) {\r\n    this.props.onChange({cat_status: event.target.value});\r\n  }\r\n\r\n  handleDateChange(date) {\r\n    this.props.onChange({admission_date: date});\r\n  }\r\n\r\n  handleAllergiesChange(event) {\r\n    this.props.onChange({allergies: event.target.value});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12} md={6}>\r\n              <TextField \r\n                id=\"input-name\" \r\n                label=\"Name\" \r\n                variant=\"standard\" \r\n                fullWidth \r\n                onChange={this.handleNameChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <TextField \r\n                id=\"input-nric\" \r\n                label=\"NRIC/FIN\"\r\n                variant=\"standard\"\r\n                fullWidth\r\n                onChange={this.handleNricChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={4}>\r\n              <TextField \r\n                select\r\n                defaultValue=\"1\"\r\n                id=\"input-cat-status\"\r\n                label=\"Cat. Status\"\r\n                variant=\"standard\"\r\n                align=\"left\"\r\n                fullWidth\r\n                onChange={this.handleCatStatusChange}\r\n              >\r\n                <MenuItem key=\"1\" value=\"1\">Cat 1</MenuItem>\r\n                <MenuItem key=\"2A\" value=\"2A\">Cat 2A</MenuItem>\r\n                <MenuItem key=\"2A+\" value=\"2A+\">Cat 2A+</MenuItem>\r\n                <MenuItem key=\"2B\" value=\"2B\">Cat 2B</MenuItem>\r\n                <MenuItem key=\"3\" value=\"3\">Cat 3</MenuItem>\r\n              </TextField>\r\n            </Grid>\r\n            <Grid item xs={12} md={4}>\r\n              <TextField\r\n                id=\"input-bed-no\"\r\n                label=\"Bed Number\"\r\n                variant=\"standard\"\r\n                fullWidth\r\n                onChange={this.handleBedNoChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={4}>\r\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                <KeyboardDatePicker\r\n                  fullWidth\r\n                  disableToolbar\r\n                  variant=\"inline\"\r\n                  format=\"dd MMM yyyy\"\r\n                  id=\"date-picker-inline\"\r\n                  label=\"Admission Date\"\r\n                  value={this.props.admission_date}\r\n                  onChange={this.handleDateChange}\r\n                  KeyboardButtonProps={{\r\n                    'aria-label': 'change date',\r\n                  }}\r\n                />\r\n              </MuiPickersUtilsProvider>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField \r\n                id=\"input-allergies\" \r\n                label=\"Drug Allergies\"\r\n                variant=\"standard\"\r\n                fullWidth\r\n                onChange={this.handleAllergiesChange}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n       \r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;","import React from 'react';\r\nimport qrcode from 'qrcode-generator';\r\nimport DateFnsAdapter from \"@date-io/date-fns\";\r\n\r\nconst dateFns = new DateFnsAdapter();\r\n\r\nclass Label extends React.Component {\r\n  render() {\r\n\r\n    if (this.props.generate) {\r\n      const canvas = this.props.canvasRef.current;\r\n      const ctx = canvas.getContext(\"2d\");\r\n      const p = this.props;\r\n\r\n      const printLeftMargin = this.props.printer.dpmm*this.props.printer.marginLeft;\r\n      const printHeight = this.props.printer.dpmm*(this.props.printer.labelHeight-2*this.props.printer.marginTop);\r\n      // const printWidth = this.props.printer.dpmm*(this.props.printer.labelWidth-this.props.printer.marginLeft);\r\n      const printPadding = 50;\r\n      const qrWidth = 25*10;\r\n      const textSize = 30;\r\n      const textLineSpace = 20;\r\n      const textBlockHeight = 4*textSize + 4*textLineSpace;\r\n      const catTextHeight = 44;\r\n\r\n      // QR Code\r\n      ctx.save()\r\n      ctx.scale(this.props.printer.scale, this.props.printer.scale);\r\n\r\n      ctx.save();\r\n      ctx.translate(printLeftMargin, 0);\r\n      const qr = qrcode(0,'H');\r\n      qr.addData(p.nric);\r\n      qr.make();\r\n      ctx.translate(printPadding, (printHeight-qrWidth)/2);\r\n      qr.renderTo2dContext(ctx, 10);\r\n      ctx.restore();\r\n\r\n      // Cat Status\r\n      ctx.save();\r\n      ctx.translate(printLeftMargin, 0)\r\n      ctx.font = \"bold 60px Arial\";\r\n      let text = \"CAT \" + p.cat_status;\r\n      let dim = ctx.measureText(text);\r\n      ctx.translate(printPadding+qrWidth+60+catTextHeight, printHeight/2);\r\n      ctx.rotate(-Math.PI/2);\r\n      ctx.translate(-dim.width/2, 0);\r\n      ctx.fillText(text, 0, 0);\r\n      ctx.restore();\r\n\r\n      ctx.save();\r\n      ctx.translate(printLeftMargin+printPadding+qrWidth+60+catTextHeight+50, (printHeight-textBlockHeight)/2);\r\n\r\n      // Field labels\r\n      ctx.font = \"bold \" + textSize + \"px Arial\";\r\n      ctx.fillText(\"Name:\", 0, 0);\r\n      ctx.fillText(\"NRIC/FIN:\", 0, (textSize+textLineSpace))\r\n      ctx.fillText(\"Bed:\", 0, 2*(textSize+textLineSpace));\r\n      ctx.fillText(\"Admission:\", 0, 3*(textSize+textLineSpace));\r\n      ctx.fillText(\"Drug Allergy:\", 0, 4*(textSize+textLineSpace));\r\n\r\n      // Field data\r\n      ctx.font = \"bold \"+ textSize +\"px Arial\";\r\n      ctx.fillText(p.name, 200, 0);\r\n      ctx.fillText(p.nric, 200, (textSize+textLineSpace))\r\n      ctx.fillText(p.bed_no, 200, 2*(textSize+textLineSpace));\r\n      ctx.fillText(dateFns.format(p.admission_date, \"dd MMM yyyy\"), 200, 3*(textSize+textLineSpace));\r\n      ctx.fillText(p.allergies, 200, 4*(textSize+textLineSpace));\r\n\r\n      ctx.restore();\r\n      ctx.restore();\r\n    }\r\n\r\n    return (\r\n      <div style={{\r\n        overflow: 'scroll',\r\n        width:'100%',\r\n        float: 'left',\r\n        position:'relative'\r\n      }}>\r\n        <div style={{\r\n          width:this.props.printer.dpmm*(this.props.printer.labelWidth),\r\n          height:this.props.printer.dpmm*(this.props.printer.labelHeight),\r\n          display: \"flex\",\r\n          justifyContent: 'left',\r\n          alignItems: 'center',\r\n          border: \"solid 1px black\"\r\n        }}>\r\n          <canvas ref={this.props.canvasRef}\r\n                  style={{border: \"dashed 1px black\"}}\r\n                  id=\"labelCanvas\"\r\n                  width={this.props.printer.dpmm*(this.props.printer.labelWidth-this.props.printer.marginLeft)*this.props.printer.scale}\r\n                  height={this.props.printer.dpmm*(this.props.printer.labelHeight-2*this.props.printer.marginTop)*this.props.printer.scale}\r\n          />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Label","import React from 'react';\r\n\r\nimport { withStyles} from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport Form from './Form';\r\nimport Label from './Label';\r\n\r\nconst styles = theme => ({ root: {\r\n  flexGrow: 1,\r\n},\r\ntitle: {\r\n  flexGrow: 1,\r\n},\r\ncontainer: {\r\n  padding: theme.spacing(2),\r\n},\r\npaper: {\r\n  margin: theme.spacing(2),\r\n  padding: '20px',\r\n  textAlign: 'center',\r\n  color: theme.palette.text.secondary,\r\n}\r\n});\r\n\r\nclass LabelMaker extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleFormChange = this.handleFormChange.bind(this);\r\n    this.handleGenerate = this.handleGenerate.bind(this);\r\n    this.handlePrint = this.handlePrint.bind(this);\r\n    this.canvasRef = React.createRef();\r\n\r\n    this.state = {\r\n      generate: false,\r\n      name: '',\r\n      nric: '',\r\n      bed_no: '',\r\n      cat_status: '1',\r\n      admission_date: Date.now(),\r\n      allergies: '',\r\n    };\r\n  }\r\n\r\n  handleFormChange(change) {\r\n    change.generate=false;\r\n    this.setState(change);\r\n  }\r\n\r\n  handleGenerate() {\r\n    const canvas = this.canvasRef.current;\r\n    const ctx = canvas.getContext(\"2d\");\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n    this.setState({generate: true});\r\n    this.render();\r\n  }\r\n\r\n  handlePrint() {\r\n    const canvas = this.canvasRef.current;\r\n    const img = canvas.toDataURL(\"image/png\");\r\n    console.log(img);\r\n    var a = window.open('', 'Print', 'height=500, width=500');\r\n    a.document.write(\"<html><head>\");\r\n    a.document.write(\"<style>@page{margin-left: 0px;margin-right: 0px;margin-top: 0px;margin-bottom: 0px;}</style>\");\r\n    a.document.write(\"</head><body>\");\r\n    a.document.write('<img src=\"'+ img +'\"/>');\r\n    a.document.write(\"</body></html>\");\r\n    a.onload = ()=>a.print();\r\n    a.document.close();\r\n    this.props.onPrint();\r\n  }\r\n\r\n  render()\r\n  {\r\n    const {classes} = this.props;\r\n\r\n    if (this.props.print) this.handlePrint();\r\n    \r\n    return (\r\n        <React.Fragment>\r\n        <Paper className={classes.paper}>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12}>\r\n              <Typography variant=\"h5\" align=\"left\">\r\n                Personal Particulars\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Form classes={this.props} onChange={this.handleFormChange} {...this.state} />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Button \r\n                variant=\"contained\"\r\n                color=\"primary\" \r\n                onClick={this.handleGenerate}\r\n              >\r\n                Generate\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n        <Paper className={classes.paper}>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12}>\r\n              <Typography variant=\"h5\" align=\"left\">\r\n                Preview\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Label canvasRef={this.canvasRef} {...this.state} {...this.props}/>\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n        </React.Fragment>\r\n  );}\r\n}\r\n\r\nexport default withStyles(styles, {withTheme: true})(LabelMaker);","import React from 'react';\r\nimport qrcode from 'qrcode-generator';\r\nimport DateFnsAdapter from \"@date-io/date-fns\";\r\n\r\nimport { withStyles} from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst dateFns = new DateFnsAdapter();\r\n\r\nconst parse = require('csv-parse');\r\n\r\nconst styles = theme => ({ root: {\r\n  flexGrow: 1,\r\n},\r\ntitle: {\r\n  flexGrow: 1,\r\n},\r\ncontainer: {\r\n  padding: theme.spacing(2),\r\n},\r\npaper: {\r\n  margin: theme.spacing(2),\r\n  padding: '20px',\r\n  textAlign: 'center',\r\n  color: theme.palette.text.secondary,\r\n}\r\n});\r\n\r\nfunction createLabel(canvas, record, props) {\r\n  canvas.width=props.printer.dpmm*(props.printer.labelWidth-props.printer.marginLeft);\r\n  canvas.height=props.printer.dpmm*(props.printer.labelHeight-2*props.printer.marginTop);\r\n  canvas.style[\"page-break-after\"] = \"always\";\r\n\r\n  const ctx = canvas.getContext(\"2d\");\r\n\r\n  const printLeftMargin = props.printer.dpmm*props.printer.marginLeft\r\n  const printHeight = props.printer.dpmm*(props.printer.labelHeight-2*props.printer.marginTop);\r\n  const printPadding = 50;\r\n  const qrWidth = 25*10;\r\n  const textSize = 30;\r\n  const textLineSpace = 20;\r\n  const textBlockHeight = 4*textSize + 4*textLineSpace;\r\n  const catTextHeight = 44;\r\n\r\n  // QR Code\r\n  ctx.save();\r\n  ctx.translate(printLeftMargin, 0);\r\n  const qr = qrcode(0,'H');\r\n  qr.addData(record[\"NRIC/FIN\"]);\r\n  qr.make();\r\n  ctx.translate(printPadding, (printHeight-qrWidth)/2);\r\n  qr.renderTo2dContext(ctx, 10);\r\n  ctx.restore();\r\n\r\n  // Cat Status\r\n  ctx.save();\r\n  ctx.translate(printLeftMargin, 0)\r\n  ctx.font = \"bold 60px Arial\";\r\n  let text = record[\"CAT STATUS\"];\r\n  let dim = ctx.measureText(text);\r\n  ctx.translate(printPadding+qrWidth+60+catTextHeight, printHeight/2);\r\n  ctx.rotate(-Math.PI/2);\r\n  ctx.translate(-dim.width/2, 0);\r\n  ctx.fillText(text, 0, 0);\r\n  ctx.restore();\r\n\r\n  ctx.save();\r\n  ctx.translate(printLeftMargin+printPadding+qrWidth+60+catTextHeight+50, (printHeight-textBlockHeight)/2);\r\n\r\n  // Field labels\r\n  ctx.font = \"bold \" + textSize + \"px Arial\";\r\n  ctx.fillText(\"Name:\", 0, 0);\r\n  ctx.fillText(\"NRIC/FIN:\", 0, (textSize+textLineSpace))\r\n  ctx.fillText(\"Bed:\", 0, 2*(textSize+textLineSpace));\r\n  ctx.fillText(\"Admission:\", 0, 3*(textSize+textLineSpace));\r\n  ctx.fillText(\"Drug Allergy:\", 0, 4*(textSize+textLineSpace));\r\n\r\n  // Field data\r\n  ctx.font = \"bold \"+ textSize +\"px Arial\";\r\n  ctx.fillText(record[\"NAME\"], 200, 0);\r\n  ctx.fillText(record[\"NRIC/FIN\"], 200, (textSize+textLineSpace))\r\n  ctx.fillText(record[\"BED\"], 200, 2*(textSize+textLineSpace));\r\n  ctx.fillText(dateFns.format(new Date(record[\"ADMISSION DATE\"]), \"dd MMM yyyy\"), 200, 3*(textSize+textLineSpace));\r\n  ctx.fillText(record[\"DRUG ALLERGY\"], 200, 4*(textSize+textLineSpace));\r\n\r\n  ctx.restore();\r\n}\r\n\r\n\r\nclass BulkMaker extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    this.handleGenerate = this.handleGenerate.bind(this);\r\n    this.handlePrint = this.handlePrint.bind(this);\r\n    this.handleUpload = this.handleUpload.bind(this);\r\n    this.previewRef = React.createRef();\r\n\r\n    this.state = {\r\n      generate: false,\r\n      data: '',\r\n      records: {},\r\n      labels: [],\r\n    };\r\n  }\r\n\r\n  handleGenerate() {\r\n    const labels = [];\r\n    const preview = this.previewRef.current;\r\n    preview.innerHTML = '';\r\n    const parser = parse(this.state.data, {columns: true});\r\n    parser.on('readable', ()=>{\r\n      let record;\r\n      // eslint-disable-next-line\r\n      while (record = parser.read()){\r\n        const canvas = document.createElement(\"canvas\");\r\n        createLabel(canvas, record, {...this.props});\r\n        labels.push(canvas.toDataURL());\r\n        preview.appendChild(canvas);\r\n      }\r\n    });\r\n\r\n    parser.on('end', ()=>{\r\n      this.setState({labels: labels});\r\n      this.setState({generate: true});\r\n    });\r\n\r\n    \r\n  }\r\n\r\n  handlePrint() {\r\n    var a = window.open('', 'Print', 'height=500, width=500');\r\n    let label;\r\n    for (label of this.state.labels){\r\n      a.document.write('<img src=\"'+ label +'\" style=\"page-break-after: always\"/>');\r\n    }\r\n    a.onload = ()=>a.print();\r\n    a.document.close();\r\n    this.props.onPrint();\r\n  }\r\n\r\n  handleUpload(event) {\r\n    this.setState({generate: false});\r\n    const reader = new FileReader();\r\n\r\n    reader.onload = (event) => {\r\n      this.setState({data: event.target.result});\r\n    };\r\n    reader.readAsText(event.target.files[0]);\r\n  }\r\n\r\n  render()\r\n  {\r\n    const {classes} = this.props;\r\n\r\n    if (this.props.print) this.handlePrint();\r\n    \r\n    return (\r\n        <React.Fragment>\r\n        <Paper className={classes.paper}>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12}>\r\n              <Typography variant=\"h5\" align=\"left\">\r\n                Upload CSV\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Button\r\n                variant=\"contained\"\r\n                component=\"label\"\r\n              >\r\n                Upload File\r\n                <input\r\n                  type=\"file\"\r\n                  style={{ display: \"none\" }}\r\n                  onChange={this.handleUpload}\r\n                />\r\n              </Button>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Button \r\n                variant=\"contained\"\r\n                color=\"primary\" \r\n                onClick={this.handleGenerate}\r\n              >\r\n                Generate\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n        <Paper ref={this.previewRef} className={classes.paper} style={{height:\"50vh\", overflow: 'scroll',}}/>\r\n        </React.Fragment>\r\n  );}\r\n}\r\n\r\nexport default withStyles(styles, {withTheme: true})(BulkMaker);","import React from 'react';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Button from '@material-ui/core/Button';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { Typography } from '@material-ui/core';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\n\r\nexport default function SettingsDialog (props) {\r\n  const theme = useTheme();\r\n  const fullScreen = useMediaQuery(theme.breakpoints.down('xs'));\r\n\r\n  const printerItems = Object.entries(props.printers).map((printer) =>\r\n    <MenuItem key={printer[1].type} value={printer[1].type}>{printer[1].name}</MenuItem>\r\n  )\r\n\r\n  const [changed, setChanged] = React.useState(false);\r\n  const [printer, setPrinter] = React.useState(props.printer);\r\n  const [disabled, setDisabled] = React.useState(props.printer.type !== \"Unknown\");\r\n\r\n  const handlePrinterTypeChange = (event) => {\r\n    \r\n    let type = event.target.value;\r\n\r\n    if (type !== \"Unknown\") {\r\n      // update everything to match known printer\r\n      setPrinter(props.printers[type]);\r\n      setDisabled(true);\r\n    } else {\r\n      const p = {...printer};\r\n      p.type = type;     \r\n      setPrinter(p);\r\n      setDisabled(false);\r\n    }\r\n    setChanged(true);\r\n  }\r\n\r\n  const handleMarginTopChange = (event) => {\r\n    if (event.target.value >= 0) {\r\n      const p = {...printer};\r\n      p.marginTop = event.target.value;\r\n      setPrinter(p);\r\n      setChanged(true);\r\n    }\r\n  }\r\n\r\n  const handleMarginLeftChange = (event) => {\r\n    if (event.target.value >= 0) {\r\n      const p = {...printer};\r\n      p.marginLeft = event.target.value;\r\n      setPrinter(p);\r\n      setChanged(true);\r\n    }\r\n  }\r\n\r\n  const handleLabelHeightChange = (event) => {\r\n    if (event.target.value >= 0) {\r\n      const p = {...printer};\r\n      p.labelHeight = event.target.value;\r\n      setPrinter(p);\r\n      setChanged(true);\r\n    }\r\n  }\r\n\r\n  const handleLabelWidthChange = (event) => {\r\n    if (event.target.value >= 0) {\r\n      const p = {...printer};\r\n      p.labelWidth = event.target.value;\r\n      setPrinter(p);\r\n      setChanged(true);\r\n    }\r\n  }\r\n\r\n  const handleResolutionChange = (event) => {\r\n    if (event.target.value >= 0) {\r\n      const p = {...printer};\r\n      p.dpmm = event.target.value;\r\n      setPrinter(p);\r\n      setChanged(true);\r\n    }\r\n  }\r\n\r\n  const handleScaleChange = (event) => {\r\n    const p={...printer};\r\n    p.scale = event.target.value;\r\n    setPrinter(p);\r\n    setChanged(true);\r\n  }\r\n\r\n  const handleSave = () => {\r\n    props.onSave({...printer});\r\n    setChanged(false);\r\n    props.onClose();\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setPrinter(props.printer);\r\n    //setDisabled(props.printer.type !== \"Unknown\");\r\n    setChanged(false);\r\n    props.onClose();\r\n  }\r\n\r\n  return (\r\n      <Dialog fullScreen={fullScreen} onBackdropClick={handleClose} {...props}>\r\n        <DialogTitle>{\"Settings\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n              Select print settings to match printer at your station.\r\n          </DialogContentText>\r\n          \r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                select\r\n                fullWidth\r\n                label=\"Printer Type\"\r\n                value={printer.type}\r\n                onChange={handlePrinterTypeChange}\r\n              >\r\n                <MenuItem key=\"Unknown\" value=\"Unknown\">\r\n                  {\"Unknown (Manual Config.)\"}\r\n                </MenuItem>\r\n                {printerItems}\r\n              </TextField>\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              <Divider />\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                disabled={disabled}\r\n                fullWidth\r\n                type=\"number\"\r\n                label=\"Resolution\"\r\n                helperText=\"300 dpi = 12 dpmm\"\r\n                InputProps={{endAdornment: <InputAdornment position=\"end\">dpmm</InputAdornment>}}\r\n                value={printer.dpmm}\r\n                onChange={handleResolutionChange}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n            <TextField\r\n                disabled={disabled}\r\n                fullWidth\r\n                type=\"number\"\r\n                label=\"Scale\"\r\n                helperText=\"Local: 1, Cloud: 0.25\"\r\n                InputProps={{endAdornment: <InputAdornment position=\"end\">x</InputAdornment>}}\r\n                value={printer.scale}\r\n                onChange={handleScaleChange}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={4} />\r\n            <Grid item xs={4}>\r\n              <TextField\r\n                disabled={disabled}\r\n                fullWidth\r\n                type=\"number\"\r\n                label=\"Top Margin\"\r\n                helperText=\"Also the bottom margin\"\r\n                InputProps={{endAdornment: <InputAdornment position=\"end\">mm</InputAdornment>}}\r\n                value={printer.marginTop}\r\n                onChange={handleMarginTopChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={4} />\r\n            <Grid item xs={4}>\r\n              <TextField\r\n                disabled={disabled}\r\n                fullWidth\r\n                type=\"number\"\r\n                label=\"Left Margin\"\r\n                InputProps={{endAdornment: <InputAdornment position=\"end\">mm</InputAdornment>}}\r\n                value={printer.marginLeft}\r\n                onChange={handleMarginLeftChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <div  align=\"center\" style={{display: \"flex\", justifyContent: 'center', alignItems: 'center', width:\"100%\", height:\"100%\", border: \"solid 1px black\"}}>\r\n                <Typography>Label</Typography>\r\n              </div>\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <TextField\r\n                disabled={disabled}\r\n                fullWidth\r\n                type=\"number\"\r\n                label=\"Label Height\"\r\n                InputProps={{endAdornment: <InputAdornment position=\"end\">mm</InputAdornment>}}\r\n                value={printer.labelHeight}\r\n                onChange={handleLabelHeightChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={4} />\r\n            <Grid item xs={4}>\r\n              <TextField\r\n                disabled={disabled}\r\n                fullWidth\r\n                type=\"number\"\r\n                label=\"Label Width\"\r\n                InputProps={{endAdornment: <InputAdornment position=\"end\">mm</InputAdornment>}}\r\n                value={printer.labelWidth}\r\n                onChange={handleLabelWidthChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={4} />\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button startIcon={<SaveIcon/>} onClick={handleSave} disabled={!changed}>Save</Button>\r\n          <Button startIcon={<CloseIcon/>} onClick={handleClose}>Cancel</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n  );\r\n}","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\nimport './App.css';\r\nimport { withStyles} from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Container from '@material-ui/core/Container';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport PrintIcon from '@material-ui/icons/Print';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\n\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ControlPointIcon from '@material-ui/icons/ControlPoint';\r\nimport ControlPointDuplicateIcon from '@material-ui/icons/ControlPointDuplicate';\r\n\r\nimport LabelMaker from './LabelMaker';\r\nimport BulkMaker from './BulkMaker';\r\nimport SettingsDialog from './SettingsDialog';\r\n\r\nconst config = require('./config.json');\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst styles = theme => ({ root: {\r\n                  flexGrow: 1,\r\n                },\r\n                title: {\r\n                  flexGrow: 1,\r\n                },\r\n                container: {\r\n                  padding: theme.spacing(2),\r\n                },\r\n                paper: {\r\n                  margin: theme.spacing(2),\r\n                  padding: '20px',\r\n                  textAlign: 'center',\r\n                  color: theme.palette.text.secondary,\r\n                },\r\n                drawer: {\r\n                  width: drawerWidth,\r\n                  flexShrink: 0,\r\n                },\r\n                drawerPaper: {\r\n                  width: drawerWidth,\r\n                },\r\n});\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    this.handlePrint = this.handlePrint.bind(this);\r\n    this.handlePrintDone = this.handlePrintDone.bind(this);\r\n    this.handleSettingsToggle = this.handleSettingsToggle.bind(this);\r\n    this.handleSettingsChanged = this.handleSettingsChanged.bind(this);\r\n    this.handleDrawerOpen = this.handleDrawerOpen.bind(this);\r\n    this.handleDrawerClose = this.handleDrawerClose.bind(this);\r\n\r\n    const savedPrinter = window.localStorage.getItem('printer');\r\n\r\n    this.state = {\r\n      printer: savedPrinter ? JSON.parse(savedPrinter) : config.printers[\"B_TD2130N\"],\r\n      settingsOpen: false,\r\n      drawerOpen: false,\r\n    };\r\n  }\r\n\r\n  handleSettingsToggle() {\r\n    this.setState({settingsOpen: !this.state.settingsOpen});\r\n  }\r\n\r\n  handleSettingsChanged(printer) {\r\n    window.localStorage.setItem('printer', JSON.stringify(printer));\r\n    this.setState({printer: printer});\r\n    console.log(printer);\r\n  }\r\n\r\n  handleDrawerOpen() {\r\n    this.setState({drawerOpen: true});\r\n  }\r\n\r\n  handleDrawerClose() {\r\n    this.setState({drawerOpen: false});\r\n  }\r\n\r\n  handlePrint() {\r\n    this.setState({print: true});\r\n  }\r\n\r\n  handlePrintDone() {\r\n    this.setState({print: false});\r\n  }\r\n\r\n  render()\r\n  {\r\n    const {classes} = this.props;\r\n    \r\n    return (\r\n    <Router>\r\n      <div className={classes.root}>\r\n        <CssBaseline />\r\n        <AppBar position=\"static\">\r\n          <Toolbar>\r\n            <IconButton\r\n              color=\"inherit\"\r\n              aria-label=\"open drawer\"\r\n              onClick={this.handleDrawerOpen}\r\n              edge=\"start\"\r\n              className={clsx(classes.menuButton, this.state.drawerOpen && classes.hide)}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              Label Maker\r\n            </Typography>\r\n            <Button color=\"inherit\" startIcon={<PrintIcon />} onClick={this.handlePrint}>Print</Button>\r\n            <IconButton color=\"inherit\" onClick={this.handleSettingsToggle}><SettingsIcon/></IconButton>\r\n          </Toolbar>\r\n        </AppBar>\r\n\r\n        <Drawer\r\n          className={classes.drawer}\r\n          anchor=\"left\"\r\n          open={this.state.drawerOpen}\r\n          onClose={this.handleDrawerClose}\r\n          classes={{\r\n            paper: classes.drawerPaper,\r\n          }}\r\n        >\r\n        <div className={classes.drawerHeader}>\r\n          <IconButton onClick={this.handleDrawerClose}>\r\n            <ChevronLeftIcon />\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          <ListItem button component={Link} to=\"/\">\r\n            <ListItemIcon><ControlPointIcon /></ListItemIcon>\r\n            <ListItemText primary=\"Single\" />\r\n          </ListItem>\r\n          <ListItem button component={Link} to=\"/bulk\">\r\n            <ListItemIcon><ControlPointDuplicateIcon /></ListItemIcon>\r\n            <ListItemText primary=\"Bulk\" />\r\n          </ListItem>\r\n        </List>\r\n      </Drawer>\r\n\r\n\r\n        <Container className={classes.container} maxWidth=\"md\">\r\n          <Switch>\r\n            <Route path='/bulk'>\r\n              <BulkMaker onPrint={this.handlePrintDone} {...this.state}/>\r\n            </Route>\r\n            <Route path='/'>\r\n              <LabelMaker onPrint={this.handlePrintDone} {...this.state} />\r\n            </Route>\r\n          </Switch>\r\n        </Container>\r\n        <SettingsDialog printer={this.state.printer} printers={config.printers} open={this.state.settingsOpen} onClose={this.handleSettingsToggle} onSave={this.handleSettingsChanged}/>\r\n      </div>\r\n    </Router>\r\n  );}\r\n}\r\n\r\nApp.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles, {withTheme: true})(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  //<React.StrictMode>\n    <App />,\n  //</React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}