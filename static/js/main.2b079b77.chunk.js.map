{"version":3,"sources":["Form.js","Label.js","SettingsDialog.js","App.js","serviceWorker.js","index.js"],"names":["Form","props","handleNameChange","bind","handleNricChange","handleBedNoChange","handleCatStatusChange","handleDateChange","handleAllergiesChange","event","this","onChange","name","target","value","nric","bed_no","cat_status","date","admission_date","allergies","Grid","container","spacing","item","xs","md","TextField","id","label","variant","fullWidth","select","defaultValue","align","MenuItem","key","utils","DateFnsUtils","disableToolbar","format","KeyboardButtonProps","React","Component","dateFns","DateFnsAdapter","Label","generate","ctx","canvasRef","current","getContext","p","printLeftMargin","printer","dpmm","marginLeft","printHeight","labelHeight","marginTop","save","translate","qr","qrcode","addData","make","renderTo2dContext","restore","font","text","dim","measureText","printPadding","rotate","Math","PI","width","fillText","textSize","style","overflow","float","position","labelWidth","height","display","justifyContent","alignItems","border","ref","SettingsDialog","theme","useTheme","fullScreen","useMediaQuery","breakpoints","down","printerItems","Object","entries","printers","map","type","useState","changed","setChanged","setPrinter","disabled","setDisabled","handleClose","onClose","Dialog","onBackdropClick","DialogTitle","DialogContent","DialogContentText","Divider","helperText","InputProps","endAdornment","InputAdornment","Typography","DialogActions","Button","startIcon","onClick","onSave","config","require","App","handleFormChange","handleGenerate","handlePrint","handleSettingsToggle","handleSettingsChanged","createRef","savedPrinter","window","localStorage","getItem","console","log","state","Date","now","JSON","parse","settingsOpen","change","setState","canvas","clearRect","render","img","toDataURL","a","open","document","write","close","print","setItem","stringify","classes","className","root","CssBaseline","AppBar","Toolbar","title","color","IconButton","Container","maxWidth","Paper","paper","withStyles","flexGrow","padding","margin","textAlign","palette","secondary","withTheme","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.2b079b77.chunk.js","sourcesContent":["import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\n\r\nclass Form extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleNameChange = this.handleNameChange.bind(this);\r\n    this.handleNricChange = this.handleNricChange.bind(this);\r\n    this.handleBedNoChange = this.handleBedNoChange.bind(this);\r\n    this.handleCatStatusChange = this.handleCatStatusChange.bind(this);\r\n    this.handleDateChange = this.handleDateChange.bind(this);\r\n    this.handleAllergiesChange = this.handleAllergiesChange.bind(this);\r\n  }\r\n\r\n  // Change Handlers\r\n\r\n  handleNameChange(event) {\r\n    this.props.onChange({name: event.target.value});\r\n  }\r\n\r\n  handleNricChange(event) {\r\n    this.props.onChange({nric: event.target.value});\r\n  }\r\n\r\n  handleBedNoChange(event) {\r\n    this.props.onChange({bed_no: event.target.value});\r\n  }\r\n\r\n  handleCatStatusChange(event) {\r\n    this.props.onChange({cat_status: event.target.value});\r\n  }\r\n\r\n  handleDateChange(date) {\r\n    this.props.onChange({admission_date: date});\r\n  }\r\n\r\n  handleAllergiesChange(event) {\r\n    this.props.onChange({allergies: event.target.value});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12} md={6}>\r\n              <TextField \r\n                id=\"input-name\" \r\n                label=\"Name\" \r\n                variant=\"standard\" \r\n                fullWidth \r\n                onChange={this.handleNameChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <TextField \r\n                id=\"input-nric\" \r\n                label=\"NRIC/FIN\"\r\n                variant=\"standard\"\r\n                fullWidth\r\n                onChange={this.handleNricChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={4}>\r\n              <TextField \r\n                select\r\n                defaultValue=\"1\"\r\n                id=\"input-cat-status\"\r\n                label=\"Cat. Status\"\r\n                variant=\"standard\"\r\n                align=\"left\"\r\n                fullWidth\r\n                onChange={this.handleCatStatusChange}\r\n              >\r\n                <MenuItem key=\"1\" value=\"1\">Cat 1</MenuItem>\r\n                <MenuItem key=\"2A\" value=\"2A\">Cat 2A</MenuItem>\r\n                <MenuItem key=\"2A+\" value=\"2A+\">Cat 2A+</MenuItem>\r\n                <MenuItem key=\"2B\" value=\"2B\">Cat 2B</MenuItem>\r\n                <MenuItem key=\"3\" value=\"3\">Cat 3</MenuItem>\r\n              </TextField>\r\n            </Grid>\r\n            <Grid item xs={12} md={4}>\r\n              <TextField\r\n                id=\"input-bed-no\"\r\n                label=\"Bed Number\"\r\n                variant=\"standard\"\r\n                fullWidth\r\n                onChange={this.handleBedNoChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={4}>\r\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                <KeyboardDatePicker\r\n                  fullWidth\r\n                  disableToolbar\r\n                  variant=\"inline\"\r\n                  format=\"dd MMM yyyy\"\r\n                  id=\"date-picker-inline\"\r\n                  label=\"Admission Date\"\r\n                  value={this.props.admission_date}\r\n                  onChange={this.handleDateChange}\r\n                  KeyboardButtonProps={{\r\n                    'aria-label': 'change date',\r\n                  }}\r\n                />\r\n              </MuiPickersUtilsProvider>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField \r\n                id=\"input-allergies\" \r\n                label=\"Drug Allergies\"\r\n                variant=\"standard\"\r\n                fullWidth\r\n                onChange={this.handleAllergiesChange}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n       \r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;","import React from 'react';\r\nimport qrcode from 'qrcode-generator';\r\nimport DateFnsAdapter from \"@date-io/date-fns\";\r\n\r\nconst dateFns = new DateFnsAdapter();\r\n\r\nclass Label extends React.Component {\r\n  render() {\r\n\r\n    if (this.props.generate) {\r\n      const canvas = this.props.canvasRef.current;\r\n      const ctx = canvas.getContext(\"2d\");\r\n      const p = this.props;\r\n\r\n      const printLeftMargin = this.props.printer.dpmm*this.props.printer.marginLeft\r\n      const printHeight = this.props.printer.dpmm*(this.props.printer.labelHeight-2*this.props.printer.marginTop);\r\n      // const printWidth = this.props.printer.dpmm*(this.props.printer.labelWidth-this.props.printer.marginLeft);\r\n      const printPadding = 50;\r\n      const qrWidth = 25*10;\r\n      const textSize = 30;\r\n      const textLineSpace = 20;\r\n      const textBlockHeight = 4*textSize + 4*textLineSpace;\r\n      const catTextHeight = 44;\r\n\r\n      // QR Code\r\n      ctx.save();\r\n      ctx.translate(printLeftMargin, 0);\r\n      const qr = qrcode(0,'H');\r\n      qr.addData(p.nric);\r\n      qr.make();\r\n      ctx.translate(printPadding, (printHeight-qrWidth)/2);\r\n      qr.renderTo2dContext(ctx, 10);\r\n      ctx.restore();\r\n\r\n      // Cat Status\r\n      ctx.save();\r\n      ctx.translate(printLeftMargin, 0)\r\n      ctx.font = \"bold 60px Arial\";\r\n      let text = \"CAT \" + p.cat_status;\r\n      let dim = ctx.measureText(text);\r\n      ctx.translate(printPadding+qrWidth+60+catTextHeight, printHeight/2);\r\n      ctx.rotate(-Math.PI/2);\r\n      ctx.translate(-dim.width/2, 0);\r\n      ctx.fillText(text, 0, 0);\r\n      ctx.restore();\r\n\r\n      ctx.save();\r\n      ctx.translate(printLeftMargin+printPadding+qrWidth+60+catTextHeight+50, (printHeight-textBlockHeight)/2);\r\n\r\n      // Field labels\r\n      ctx.font = \"bold \" + textSize + \"px Arial\";\r\n      ctx.fillText(\"Name:\", 0, 0);\r\n      ctx.fillText(\"NRIC/FIN:\", 0, (textSize+textLineSpace))\r\n      ctx.fillText(\"Bed:\", 0, 2*(textSize+textLineSpace));\r\n      ctx.fillText(\"Admission:\", 0, 3*(textSize+textLineSpace));\r\n      ctx.fillText(\"Drug Allergy:\", 0, 4*(textSize+textLineSpace));\r\n\r\n      // Field data\r\n      ctx.font = \"bold \"+ textSize +\"px Arial\";\r\n      ctx.fillText(p.name, 200, 0);\r\n      ctx.fillText(p.nric, 200, (textSize+textLineSpace))\r\n      ctx.fillText(p.bed_no, 200, 2*(textSize+textLineSpace));\r\n      ctx.fillText(dateFns.format(p.admission_date, \"dd MMM yyyy\"), 200, 3*(textSize+textLineSpace));\r\n      ctx.fillText(p.allergies, 200, 4*(textSize+textLineSpace));\r\n\r\n      ctx.restore();\r\n    }\r\n\r\n    const divStyle={\r\n      overflow: 'scroll',\r\n      width:'100%',\r\n      float: 'left',\r\n      position:'relative'\r\n    };\r\n\r\n    return (\r\n      <div style={divStyle}>\r\n        <div style={{width:this.props.printer.dpmm*(this.props.printer.labelWidth), height:this.props.printer.dpmm*(this.props.printer.labelHeight), display: \"flex\", justifyContent: 'left', alignItems: 'center', border: \"solid 1px black\"}}>\r\n          <canvas ref={this.props.canvasRef}\r\n                  //style={{border: \"dashed 1px black\"}}\r\n                  id=\"labelCanvas\"\r\n                  width={this.props.printer.dpmm*(this.props.printer.labelWidth-this.props.printer.marginLeft)}\r\n                  height={this.props.printer.dpmm*(this.props.printer.labelHeight-2*this.props.printer.marginTop)}\r\n          />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Label","import React from 'react';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Button from '@material-ui/core/Button';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { Typography } from '@material-ui/core';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\n\r\nexport default function SettingsDialog (props) {\r\n  const theme = useTheme();\r\n  const fullScreen = useMediaQuery(theme.breakpoints.down('xs'));\r\n\r\n  const printerItems = Object.entries(props.printers).map((printer) =>\r\n    <MenuItem key={printer[1].type} value={printer[1].type}>{printer[1].name}</MenuItem>\r\n  )\r\n\r\n  const [changed, setChanged] = React.useState(false);\r\n  const [printer, setPrinter] = React.useState(props.printer);\r\n  const [disabled, setDisabled] = React.useState(props.printer.type !== \"Unknown\");\r\n\r\n  const handlePrinterTypeChange = (event) => {\r\n    \r\n    let type = event.target.value;\r\n\r\n    if (type !== \"Unknown\") {\r\n      // update everything to match known printer\r\n      setPrinter(props.printers[type]);\r\n      setDisabled(true);\r\n    } else {\r\n      const p = {...printer};\r\n      p.type = type;     \r\n      setPrinter(p);\r\n      setDisabled(false);\r\n    }\r\n    setChanged(true);\r\n  }\r\n\r\n  const handleMarginTopChange = (event) => {\r\n    if (event.target.value >= 0) {\r\n      const p = {...printer};\r\n      p.marginTop = event.target.value;\r\n      setPrinter(p);\r\n      setChanged(true);\r\n    }\r\n  }\r\n\r\n  const handleMarginLeftChange = (event) => {\r\n    if (event.target.value >= 0) {\r\n      const p = {...printer};\r\n      p.marginLeft = event.target.value;\r\n      setPrinter(p);\r\n      setChanged(true);\r\n    }\r\n  }\r\n\r\n  const handleLabelHeightChange = (event) => {\r\n    if (event.target.value >= 0) {\r\n      const p = {...printer};\r\n      p.labelHeight = event.target.value;\r\n      setPrinter(p);\r\n      setChanged(true);\r\n    }\r\n  }\r\n\r\n  const handleLabelWidthChange = (event) => {\r\n    if (event.target.value >= 0) {\r\n      const p = {...printer};\r\n      p.labelWidth = event.target.value;\r\n      setPrinter(p);\r\n      setChanged(true);\r\n    }\r\n  }\r\n\r\n  const handleResolutionChange = (event) => {\r\n    if (event.target.value >= 0) {\r\n      const p = {...printer};\r\n      p.dpmm = event.target.value;\r\n      setPrinter(p);\r\n      setChanged(true);\r\n    }\r\n  }\r\n\r\n  const handleSave = () => {\r\n    props.onSave({...printer});\r\n    setChanged(false);\r\n    props.onClose();\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setPrinter(props.printer);\r\n    //setDisabled(props.printer.type !== \"Unknown\");\r\n    setChanged(false);\r\n    props.onClose();\r\n  }\r\n\r\n  return (\r\n      <Dialog fullScreen={fullScreen} onBackdropClick={handleClose} {...props}>\r\n        <DialogTitle>{\"Settings\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n              Select print settings to match printer at your station.\r\n          </DialogContentText>\r\n          \r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                select\r\n                fullWidth\r\n                label=\"Printer Type\"\r\n                value={printer.type}\r\n                onChange={handlePrinterTypeChange}\r\n              >\r\n                <MenuItem key=\"Unknown\" value=\"Unknown\">\r\n                  {\"Unknown (Manual Config.)\"}\r\n                </MenuItem>\r\n                {printerItems}\r\n              </TextField>\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              <Divider />\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                disabled={disabled}\r\n                fullWidth\r\n                type=\"number\"\r\n                label=\"Resolution\"\r\n                helperText=\"300 dpi = 12 dpmm\"\r\n                InputProps={{endAdornment: <InputAdornment position=\"end\">dpmm</InputAdornment>}}\r\n                value={printer.dpmm}\r\n                onChange={handleResolutionChange}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={4} />\r\n            <Grid item xs={4}>\r\n              <TextField\r\n                disabled={disabled}\r\n                fullWidth\r\n                type=\"number\"\r\n                label=\"Top Margin\"\r\n                helperText=\"Also the bottom margin\"\r\n                InputProps={{endAdornment: <InputAdornment position=\"end\">mm</InputAdornment>}}\r\n                value={printer.marginTop}\r\n                onChange={handleMarginTopChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={4} />\r\n            <Grid item xs={4}>\r\n              <TextField\r\n                disabled={disabled}\r\n                fullWidth\r\n                type=\"number\"\r\n                label=\"Left Margin\"\r\n                InputProps={{endAdornment: <InputAdornment position=\"end\">mm</InputAdornment>}}\r\n                value={printer.marginLeft}\r\n                onChange={handleMarginLeftChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <div  align=\"center\" style={{display: \"flex\", justifyContent: 'center', alignItems: 'center', width:\"100%\", height:\"100%\", border: \"solid 1px black\"}}>\r\n                <Typography>Label</Typography>\r\n              </div>\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <TextField\r\n                disabled={disabled}\r\n                fullWidth\r\n                type=\"number\"\r\n                label=\"Label Height\"\r\n                InputProps={{endAdornment: <InputAdornment position=\"end\">mm</InputAdornment>}}\r\n                value={printer.labelHeight}\r\n                onChange={handleLabelHeightChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={4} />\r\n            <Grid item xs={4}>\r\n              <TextField\r\n                disabled={disabled}\r\n                fullWidth\r\n                type=\"number\"\r\n                label=\"Label Width\"\r\n                InputProps={{endAdornment: <InputAdornment position=\"end\">mm</InputAdornment>}}\r\n                value={printer.labelWidth}\r\n                onChange={handleLabelWidthChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={4} />\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button startIcon={<SaveIcon/>} onClick={handleSave} disabled={!changed}>Save</Button>\r\n          <Button startIcon={<CloseIcon/>} onClick={handleClose}>Cancel</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n  );\r\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './App.css';\nimport { withStyles} from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport PrintIcon from '@material-ui/icons/Print';\nimport SettingsIcon from '@material-ui/icons/Settings';\n\nimport Form from './Form'\nimport Label from './Label';\nimport SettingsDialog from './SettingsDialog';\n\nconst config = require('./config.json');\n\nconst styles = theme => ({ root: {\n                  flexGrow: 1,\n                },\n                title: {\n                  flexGrow: 1,\n                },\n                container: {\n                  padding: theme.spacing(2),\n                },\n                paper: {\n                  margin: theme.spacing(2),\n                  padding: '20px',\n                  textAlign: 'center',\n                  color: theme.palette.text.secondary,\n                }\n});\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleFormChange = this.handleFormChange.bind(this);\n    this.handleGenerate = this.handleGenerate.bind(this);\n    this.handlePrint = this.handlePrint.bind(this);\n    this.handleSettingsToggle = this.handleSettingsToggle.bind(this);\n    this.handleSettingsChanged = this.handleSettingsChanged.bind(this);\n    this.canvasRef = React.createRef();\n\n    const savedPrinter = window.localStorage.getItem('printer');\n\n    console.log(config.printers[0]);\n\n    this.state = {\n      generate: false,\n      name: '',\n      nric: '',\n      bed_no: '',\n      cat_status: '1',\n      admission_date: Date.now(),\n      allergies: '',\n      printer: savedPrinter ? JSON.parse(savedPrinter) : config.printers[\"B_TD2130N\"],\n      settingsOpen: false,\n    };\n  }\n\n  handleFormChange(change) {\n    change.generate=false;\n    this.setState(change);\n  }\n\n  handleGenerate() {\n    const canvas = this.canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    this.setState({generate: true});\n    this.render();\n  }\n\n  handlePrint() {\n    const canvas = this.canvasRef.current;\n    const img = canvas.toDataURL(\"image/png\");\n    console.log(img);\n    var a = window.open('', 'Print', 'height=500, width=500'); \n    a.document.write('<img src=\"'+ img +'\"/>');\n    a.document.close(); \n    a.print(); \n  }\n\n  handleSettingsToggle() {\n    this.setState({settingsOpen: !this.state.settingsOpen});\n  }\n\n  handleSettingsChanged(printer) {\n    window.localStorage.setItem('printer', JSON.stringify(printer));\n    this.setState({printer: printer});\n    console.log(printer);\n  }\n\n  render()\n  {\n    const {classes} = this.props;\n    \n    return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.title}>\n            Label Maker\n          </Typography>\n          \n          <Button color=\"inherit\" startIcon={<PrintIcon />} onClick={this.handlePrint}>Print</Button>\n          <IconButton color=\"inherit\" onClick={this.handleSettingsToggle}><SettingsIcon/></IconButton>\n        </Toolbar>\n      </AppBar>\n      <Container className={classes.container} maxWidth=\"md\">\n        <Paper className={classes.paper}>\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <Typography variant=\"h5\" align=\"left\">\n                Personal Particulars\n              </Typography>\n            </Grid>\n            <Grid item xs={12}>\n              <Form classes={this.props} onChange={this.handleFormChange} {...this.state} />\n            </Grid>\n            <Grid item xs={12}>\n              <Button \n                variant=\"contained\"\n                color=\"primary\" \n                onClick={this.handleGenerate}\n              >\n                Generate\n              </Button>\n            </Grid>\n          </Grid>\n        </Paper>\n        <Paper className={classes.paper}>\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <Typography variant=\"h5\" align=\"left\">\n                Preview\n              </Typography>\n            </Grid>\n            <Grid item xs={12}>\n              <Label canvasRef={this.canvasRef} {...this.state}/>\n            </Grid>\n          </Grid>\n        </Paper>\n      </Container>\n      <SettingsDialog printer={this.state.printer} printers={config.printers} open={this.state.settingsOpen} onClose={this.handleSettingsToggle} onSave={this.handleSettingsChanged}/>\n    </div>\n  );}\n}\n\nApp.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles, {withTheme: true})(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  //<React.StrictMode>\n    <App />,\n  //</React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}